**套接字的作用**
```html
套接字是计算机网络数据结构，它体现了“通信端点”的概念。在任何类型的通信开始之前，
网络应用程序必须创建套接字。可以将它们比作电话插孔，没有它将无法进行通信。
```

**套接字的起源**
```html
套接字的起源可以追溯到20 世纪70 年代，它是加利福尼亚大学的伯克利版本UNIX（称
为BSD UNIX）的一部分。因此，有时你可能会听过将套接字称为伯克利套接字或BSD 套接
字。套接字最初是为同一主机上的应用程序所创建，使得主机上运行的一个程序（又名一个
进程）与另一个运行的程序进行通信。这就是所谓的进程间通信（Inter Process Communication，
IPC）。有两种类型的套接字：基于文件的和面向网络的。
```
```html
UNIX 套接字是我们所讲的套接字的第一个家族，并且拥有一个“家族名字”AF_UNIX
（又名AF_LOCAL，在POSIX1.g 标准中指定），它代表地址家族（address family）：UNIX。
包括Python 在内的大多数受欢迎的平台都使用术语地址家族及其缩写AF；其他比较旧的系
统可能会将地址家族表示成域（domain）或协议家族（protocol family），并使用其缩写PF 而
非AF。类似地，AF_LOCAL（在2000～2001 年标准化）将代替AF_UNIX。然而，考虑到
后向兼容性，很多系统都同时使用二者，只是对同一个常数使用不同的别名。Python 本身仍
然在使用AF_UNIX。
```

**套接字的类型**
```html
第一种类型的套接字是基于文件的，因为两个进程运行在同一台计算机上，所以这些套接字
都是基于文件的，这意味着文件系统支持它们的底层基础结构。这是能够说得通的，
因为文件系统是一个运行在同一主机上的多个进程之间的共享常量。
第二种类型的套接字是基于网络的，它也有自己的家族名字AF_INET，或者地址家族：
因特网。另一个地址家族AF_INET6 用于第6 版因特网协议（IPv6）寻址。此外，还有其他
的地址家族，这些要么是专业的、过时的、很少使用的，要么是仍未实现的。在所有的地址
家族之中，目前AF_INET是使用得最广泛的。
```

**特殊的套接字**
```html
Python 2.5中引入了对特殊类型的Linux套接字的支持。套接字的AF_NETLINK 家族（无
连接，允许使用标准的BSD套接字接口进行用户级别和内核级别代码之间的IPC。
之前那种解决方案比较麻烦，而这个解决方案可以看作一种比前一种更加优雅且风险更低的
解决方案，例如，添加新系统调用、/proc 支持，或者对一个操作系统的“IOCTL”。
针对Linux 的另一种特性（Python 2.6 中新增）就是支持透明的进程间通信（TIPC）协
议。TIPC允许计算机集群之中的机器相互通信，而无须使用基于IP的寻址方式。Python对
TIPC的支持以AF_TIPC 家族的方式呈现。
总的来说，Python 只支持AF_UNIX、AF_NETLINK、AF_TIPC 和AF_INET 家族。因为
本章重点讨论网络编程，所以在本章剩余的大部分内容中，我们将使用AF_INET。
```

**套接字的地址**
```html
如果一个套接字像一个电话插孔——允许通信的一些基础设施，那么主机名和端口号就
像区号和电话号码的组合。然而，拥有硬件和通信的能力本身并没有任何好处，除非你知道
电话打给谁以及如何拨打电话。一个网络地址由主机名和端口号对组成，而这是网络通信所
需要的。此外，并未事先说明必须有其他人在另一端接听；否则，你将听到这个熟悉的声音
“对不起，您所拨打的电话是空号，请核对后再拨”。你可能已经在浏览网页的过程中见过一
个网络类比，例如“无法连接服务器，服务器没有响应或者服务器不可达。”
```
```html
有效的端口号范围为0～65535（尽管小于1024 的端口号预留给了系统）。如果你正在使
用POSIX 兼容系统（如Linux、Mac OS X 等），那么可以在/etc/services 文件中找到预留端口
号的列表（以及服务器／协议和套接字类型）
```
