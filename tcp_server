"""
TCP面向有连接，服务端工作流程如下：
<1>.创建通信：sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
<2>.绑定地址：sock.bind(('0.0.0.0', '8000'))
<3>.监听连接：sock.listen(5)--->最多同时监听5个客户端连接
<4>.等待连接：conn, addr = sock.accept()--->阻塞直到客户端连接
<5>.读取自客户端数据：conn.recv(1024)--->逻辑处理客户端数据
<6>.发送给客户端数据：conn.sendall(bytes('from tcp ipv4 server......', encoding='utf8'))
<7>.关闭连接：conn.close()
注意事项：客户端和服务端必须先启动服务端，否则会报错
"""
import socket


def tcp_ipv4_server(host='0.0.0.0', port=8001):
    """
    功能：TCP协议IPV4服务器
    :param host: str
    :param port: int
    :return:
    """
    sock = socket.socket(family=socket.AF_INET, type=socket.SOCK_STREAM)
    sock.bind((host, port))
    sock.listen(5)
    while True:
        conn, addr = sock.accept()
        recv_data4 = conn.recv(1024)
        print(recv_data4.decode('utf8'))
        conn.sendall(bytes('from tcp ipv4 server......', encoding='utf8'))
        conn.close()


def tcp_ipv4_server_test(host='0.0.0.0', port=8002):
    """
    功能：TCP协议IPV4服务器
    :param host: str
    :param port: int
    :return:
    """
    sock = socket.socket(family=socket.AF_INET, type=socket.SOCK_STREAM)
    sock.bind((host, port))
    sock.listen(5)
    while True:
        conn, addr = sock.accept()
        recv_data4, (ip, port) = conn.recvfrom(1024)
        print(recv_data4.decode('utf8'))
        # send():发送的数据可能小于实际要发送的字节长度
        data_len = conn.send(bytes('from tcp ipv6 server test......' * 100000000, encoding='utf8'))
        print(data_len)
        conn.close()


def tcp_ipv6_server(host='0.0.0.0', port=8001):
    """
    功能：TCP协议IPV6服务器
    :param host: str
    :param port: int
    :return:
    """
    sock = socket.socket(family=socket.AF_INET6, type=socket.SOCK_STREAM)
    sock.bind((host, port))
    sock.listen(5)
    while True:
        conn, addr = sock.accept()
        recv_data6 = conn.recv(1024)
        print(recv_data6.decode('utf8'))
        conn.sendall(bytes('from tcp ipv6 server......', encoding='utf8'))
        conn.close()


def tcp_ipv6_server_test(host='0.0.0.0', port=8002):
    """
    功能：TCP协议IPV6服务器
    :param host: str
    :param port: int
    :return:
    """
    sock = socket.socket(family=socket.AF_INET6, type=socket.SOCK_STREAM)
    sock.bind((host, port))
    sock.listen(5)
    while True:
        conn, addr = sock.accept()
        recv_data6, (ip, port) = conn.recvfrom(1024)
        print(recv_data6.decode('utf8'))
        # send():发送的数据可能小于实际要发送的字节长度
        data_len = conn.send(bytes('from tcp ipv6 server test......' * 1000000, encoding='utf8'))
        print(data_len)
        conn.close()


if __name__ == '__main__':
    # tcp_ipv4_server()
    tcp_ipv4_server_test()
